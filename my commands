to install kind, i just open a newpc

docker run -it --name=newpc ubuntu:20.04
#right now cannot run inside docker container because inside docker there's no docker command
cannot run kind because cannot run docker
because it has to be outside docker
have to have docker environment, in the same level

wget https://golang.org/dl/go1.16.4.linux-amd64.tar.gz

pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech/kind$ 
docker cp go1.16.4.linux-amd64.tar.gz 14cadd228908:/

rm -rf /usr/local/go && tar -C /usr/local -xzf go1.16.4.linux-amd64.tar.gz
root@14cadd228908:/# export PATH=$PATH:/usr/local/go/bin
root@14cadd228908:/# go version

apt-get update
apt-get install make
apt-get install git
git clone https://github.com/kubernetes-sigs/kind.git
cd kind
make build

kind: command not found

export GOPATH="$HOME/go"

PATH="$GOPATH/bin:$PATH"
#root@14cadd228908:/# echo $GOPATH
/root/go

root@14cadd228908:/# ls
bin   dev  go.mod                       home  lib    lib64   media  opt   root  sbin  sys  usr
boot  etc  go1.16.4.linux-amd64.tar.gz  kind  lib32  libx32  mnt    proc  run   srv   tmp  var
root@14cadd228908:/# cd kind
root@14cadd228908:/kind# kind
kind creates and manages local Kubernetes clusters using Docker container 'nodes'

Usage:
  kind [command]

Available Commands:
  build       Build one of [node-image]
  completion  Output shell completion code for the specified shell (bash, zsh or fish)
  create      Creates one of [cluster]
  delete      Deletes one of [cluster]
  export      Exports one of [kubeconfig, logs]
  get         Gets one of [clusters, nodes, kubeconfig]
  help        Help about any command
  load        Loads images into nodes
  version     Prints the kind CLI version

in docker have kind v0.11.0
root@14cadd228908:/kind# kind version
kind v0.11.0 go1.16.4 linux/amd64

#on host machine itself, need to sudo snap install --classic go to have go installed

sudo snap install go --classic
go 1.16.3 from Michael Hudson-Doyle (mwhudson) installed

in docker container doesn't have go, still can install kind
outside the container, no go, no kind, why?
it says so in the documentation

on host, have kind v0.12.0-alpha
pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech/kind$ kind version
kind v0.12.0-alpha go1.16.3 linux/amd64

i have installed also kubernetes from source, but in a separate directory of kind
and source of kubernetes has nothing to do with ${GOPATH}

now after finish installation of go, kind, and kubectl on host, 
i'll start playing with cluster that kind created
kind create cluster
now i get a cluster called kind
and a Docker container called kind-control-plane

now i'll add docker-image my-custom-image0 my-custom-image1 to my cluster
kind load docker-image my-custom-image-0 my-custom-image-1

i have prepared first 2 directories that will become docker containers according to the 5 tasks required
storage and model
each has a Dockerfile. 
i'll build those dockerfiles into images and put as arg for kind load docker-image
dl_iris_dataset and keras/alone:latest <-- only keras in the image, model is not inside image

i can start using tensorflow and keras to build model inside the keras/alone container (keras_alone)
so the command to add docker image to my cluster is

https://kind.sigs.k8s.io/docs/user/quick-start/

kind load docker-image dl_iris_dataset keras/alone:latest
#shouldn't put latest if you don't need. so kind doesn't need to pull every time

~/Works/ImpactTech/kind$ kubectl cluster-info --context kind-kind
Kubernetes control plane is running at https://127.0.0.1:36357
CoreDNS is running at https://127.0.0.1:36357/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

docker exec -it kind-control-plane crictl images
IMAGE                                      TAG                  IMAGE ID            SIZE
docker.io/keras/alone                      latest               e194fbd643015       2.64GB
docker.io/kindest/kindnetd                 v20210326-1e038dc5   6de166512aa22       54MB
docker.io/library/dl_iris_dataset          latest               c9212fec1e517       178MB
docker.io/rancher/local-path-provisioner   v0.0.14              e422121c9c5f9       13.4MB
k8s.gcr.io/build-image/debian-base         v2.1.0               c7c6c86897b63       21.1MB
k8s.gcr.io/coredns/coredns                 v1.8.0               296a6d5035e2d       12.9MB
k8s.gcr.io/etcd                            3.4.13-0             0369cf4303ffd       86.7MB
k8s.gcr.io/kube-apiserver                  v1.21.1              9162816021b10       127MB
k8s.gcr.io/kube-controller-manager         v1.21.1              50f30f65d22b5       121MB
k8s.gcr.io/kube-proxy                      v1.21.1              bb840f0a082a6       133MB
k8s.gcr.io/kube-scheduler                  v1.21.1              b2149d9f128ce       51.9MB
k8s.gcr.io/pause                           3.5                  ed210e3e4a5ba       301kB


then have problem with git large file. that go.tar.gz was too large i shouldn't hv left it to be committed

i didn't put kubernetes source in the same place as go
so now i have to put it at ${GOPATH}/src/k8s.io/kubernetes
have to git clone again!

otherwise now kuberoot cannot find

kind build node-image
ERROR: error building node image: error finding kuberoot: could not find kubernetes source

what about config.yaml? where is the current one? can check with kubectl config view
which is from config file inside ${GOPATH}/src/k8s.io/kubernetes

i have to do --config during kind create cluster to specify the configurations
but what about the one that i already created the default?

then what will node-image do? build kind-control-plane container 

so now i have kubernetes built at 2 places; ImpactTech/kubernetes and ${HOME}/go/src/k8s.io/kubernetes

once turn off the pc, kind-control-plane docker container doesn't turn off
what was the run command?
but kind is not there on host if i haven't set export GOPATH="$HOME/go" and PATH="$GOPATH/bin:$PATH"
i did something wrong like export ${GOPATH}

kubernetes node-image is being built with 'kind build node-image'
which depends on kubernetes sources and upstream built
which means i have to make kubernetes built works before using kind-customize image

pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech/kind/images$ kind get nodes
kind-control-plane

now i just need to docker-compose up

no need to manually load docker images to each node like above
i just need to compose pod, which is a set of containers that communicate with each otherwise
so podwith5containers.yaml
and then kubectl apply -f path/to/podwith5containers.yaml
and then to check it kubectl get pod five-containers --output=yaml

at first cannot load image because kubelet cannot find the images inside podwith5containers.yaml
have to creat local registry with create_cluster_with_registry.sh script provided by kind 
at create cluster. if i want both specific number of nodes and registry, have to say 
already at create cluster. maybe adding prometheus have to do when?

then i'd have to tag my own built images with 
docker tag dl_iris_curl localhost:5000/dl_iris_curl
then kubelet can find it and load image for me

i set up storage as local volume
docker volume create iris-clf-shared-data 
i have to -v mnt as volume on my 4 containers to keep stuff i made

first box i do curl iris_training.csv, iris_test.csv with a normal ubuntu image
that run a script curl.sh at docker run
the container will generate the file inside /data where
docker run -it --name=iris_curl5 -v iris-clf-shared-data:/data dl_iris_curl

download dl_iris_dataset doesn't need keras,so the image can be just ubuntu, small
but next one would need keras in the image to be able to process the layers and model

well, now thinking how to connext box1 to box2 and so on? how to send variables between containers?
why not use some platform that will make my life easier

so here comes the hint that says MLflow, but actually looking at kubeflow 
it's more my situation and more similar to how the project has been set up,
looking at the job description, yes you use kubeflow, so kubeflow here i come!

first understanding what is kubeflow and what's the difference with kubeflow pipeline SDK
ofcourse it's the SDK I need, not the UI like in the documentation

so first activate a conda environment. i choose docker image python:latest, 
don't know if it's gonna bring me problems later
pip3 install kfp --upgrade
export PATH=$PATH:~/.local/bin
root@1111fc286e97:/# which dsl-compile
/usr/local/bin/dsl-compile

web_downloader_op = kfp.components.load_component_from_url(
    'https://raw.githubusercontent.com/kubeflow/pipelines/master/components/web/Download/component-sdk-v2.yaml')

def my_pipeline(url: str):
  web_downloader_task = web_downloader_op(url=url)
  merge_csv_task = merge_csv(tar_data=web_downloader_task.outputs['data'])
  # The outputs of the merge_csv_task can be referenced using the
  # merge_csv_task.outputs dictionary: merge_csv_task.outputs['output_csv']

มี web_downloader_op แล้วโว้ยยย

ต่อไปกล่องที่สอง


docker build -t kubeflowchandra .
docker run -it --name=kubeshashank kubeflowchandra:latest
pip3 install kfp --upgrade
and now i have kubeflow and kubectl inside a docker container! (use alpine, apk add, curl no cache)

forget about kubeflow in container. now i'm back on host
pip list|grep kfp
kfp                      1.6.3
kfp-pipeline-spec        0.1.8
kfp-server-api           1.6.0

cannot connect pipeline SDK client
client = kfp.Client() connection refused
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=3000): 
Max retries exceeded with url: /apis/v1beta1/healthz 
(Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7efed4d48a30>: 
Failed to establish a new connection: [Errno 111] Connection refused'))

and then i want to compile sample pipeline sequential.py
dsl-compile --py [path/to/sequential] --output [path/to/sequential.tar.gz]
Module not found
 File "/home/pimpwhippa/Works/ImpactTech/mlpipeline/lib/python3.8/site-packages/kfp/compiler/main.py", line 90, in compile_pyfile
    __import__(os.path.splitext(filename)[0])
ModuleNotFoundError: No module named 'sequential'
tried everywhere export DIR, ${DIR}/sequential.py never found sequential.py

data parsing is the heart of pipeline, but still cannot find where the pipeline file is!!

(mlpipeline) pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech/mlpipeline$ ls
bin  lib  pyvenv.cfg  sequential.py

export DIR=[/home/pimpwhippa/Works/ImpactTech/mlpipeline]
(mlpipeline) pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech/mlpipeline/lib/python3.8/site-packages/kfp/compiler$ 
cp ${DIR}/sequential.py .
cp: cannot stat '[/home/pimpwhippa/Works/ImpactTech/mlpipeline]/sequential.py': No such file or directory

i haven't told kubernetes that there's such a thing like kubeflow kpf exist
so first i have to create a new Service kubeflow ขึ้นมา แล้วไปบอก and then tell kubectl
to create pod for that no not pod, this time it's called Service
kubectl apply -k /home/pimpwhippa/Works/ImpactTech/kubeflow/

apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: MyApp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9376

and service has its own (DNS name, or IP address, or clusterIP??)

since i haven't told kubernetes about kubeflow, when kubeflow kfp try to connect client=kfp.Client()
got the error connection refused

and then ofcourse if connection refused you cannot compile and run it,
no way they will find your file!

i escape the gcp commands! yahoo!
i mean wuuuuuuhuuuuuwwwwwww!

so since
(mlpipeline) pimpwhippa@pimpwhippa-Aspire-E5-473G:~/Works/ImpactTech$ 
kubectl apply -k /home/pimpwhippa/Works/ImpactTech/kubeflow/

error: unable to find one of 'kustomization.yaml', 'kustomization.yml' or 
'Kustomization' in directory '/home/pimpwhippa/Works/ImpactTech/kubeflow'

็i need to go make that file. and to make that file you need to make another 3 files.
kustomization, deploy, service, and configMap all .yaml file to tell kubenetes what to do
and also have to install kustomize who encourages fork/build/rebase workflow

turned out making files in kustomize was not needed
in kubeflow site, they already made that file to be applied
but it just need to be applied with -k --> --kustomize!
kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/platform-agnostic-pns?ref=$PIPELINE_VERSION"
then set context

kubectl config set-context iris-clf3 --namespace=kubeflow \
>   --cluster=kind-iris-clf3 \
>   --user=kind-iris-clf3

then port-forwarding works
kubectl port-forward -n kubeflow svc/ml-pipeline-ui 8080:80

go to ui at localhost:8080
not sure if this was needed
kubectl apply -f kustomize/deployment.yaml

now writing my pipeline.py, then compile, then upload pipeline to kubeflow ui